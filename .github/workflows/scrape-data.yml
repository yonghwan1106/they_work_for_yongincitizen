name: Daily Data Scraping

on:
  # 매일 한국시간 오전 2시에 실행 (UTC 17:00 = KST 02:00)
  schedule:
    - cron: '0 17 * * *'

  # 수동 실행 가능
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd scraper
          pip install -r requirements.txt

      - name: Run scrapers
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          cd scraper

          # Continue on error - don't stop if one script fails
          set +e

          # Track overall success
          OVERALL_STATUS=0

          # 1. 네이버 카페 최신글 수집 (매일 - 홈페이지 표시용)
          echo "=== Running cafe posts scraper ==="
          python -m scrapers.cafe_posts
          if [ $? -ne 0 ]; then
            echo "⚠️ Cafe posts scraper failed"
            OVERALL_STATUS=1
          else
            echo "✅ Cafe posts scraper completed"
          fi

          # 2. 의원 정보 업데이트 (주 1회만 - 월요일에만 실행)
          if [ "$(date +%u)" -eq 1 ]; then
            echo "=== Running councillors scraper (Monday only) ==="
            python -m scrapers.councillors
            if [ $? -ne 0 ]; then
              echo "⚠️ Councillors scraper failed"
              OVERALL_STATUS=1
            else
              echo "✅ Councillors scraper completed"
            fi
          fi

          # 3. 회의록 수집 (매일 - 최근 3페이지)
          echo "=== Running meetings scraper ==="
          python -m scrapers.meetings
          if [ $? -ne 0 ]; then
            echo "⚠️ Meetings scraper failed"
            OVERALL_STATUS=1
          else
            echo "✅ Meetings scraper completed"
          fi

          # 4. 회의록 전문 업데이트 (새로운 회의록만)
          echo "=== Updating meeting transcripts ==="
          python update_transcripts.py
          if [ $? -ne 0 ]; then
            echo "⚠️ Update transcripts failed"
            OVERALL_STATUS=1
          else
            echo "✅ Update transcripts completed"
          fi

          # 5. 의안 수집 (매일 - 최근 3페이지)
          echo "=== Running bills scraper ==="
          python -m scrapers.bills
          if [ $? -ne 0 ]; then
            echo "⚠️ Bills scraper failed"
            OVERALL_STATUS=1
          else
            echo "✅ Bills scraper completed"
          fi

          # 6. 위원회 정보 업데이트
          echo "=== Extracting committees ==="
          python extract_committees.py
          if [ $? -ne 0 ]; then
            echo "⚠️ Extract committees failed"
            OVERALL_STATUS=1
          else
            echo "✅ Extract committees completed"
          fi

          # 7. 회의록-위원회 연결
          echo "=== Linking meetings to committees ==="
          python link_meetings_to_committees.py
          if [ $? -ne 0 ]; then
            echo "⚠️ Link meetings to committees failed"
            OVERALL_STATUS=1
          else
            echo "✅ Link meetings to committees completed"
          fi

          # 8. 회의록 전문 추출 (새로운 회의록만)
          echo "=== Extracting full transcripts ==="
          python extract_transcripts.py --limit 20
          if [ $? -ne 0 ]; then
            echo "⚠️ Extract transcripts failed"
            OVERALL_STATUS=1
          else
            echo "✅ Extract transcripts completed"
          fi

          # 9. AI 발언 추출 및 요약 (ANTHROPIC_API_KEY가 있을 때만 실행)
          if [ -n "$ANTHROPIC_API_KEY" ]; then
            echo "=== Extracting speeches with AI ==="
            python extract_speeches.py --limit 10
            if [ $? -ne 0 ]; then
              echo "⚠️ Extract speeches failed"
              OVERALL_STATUS=1
            else
              echo "✅ Extract speeches completed"
            fi
          else
            echo "⚠️ Skipping AI speech extraction (ANTHROPIC_API_KEY not set)"
          fi

          echo ""
          echo "=== Scraping Summary ==="
          if [ $OVERALL_STATUS -eq 0 ]; then
            echo "✅ All tasks completed successfully"
          else
            echo "⚠️ Some tasks failed - check logs above"
          fi

          # Exit with overall status (but allow partial success)
          exit 0

      - name: Notify on failure
        if: failure()
        run: |
          echo "Scraping failed! Check the logs for details."
          # 여기에 Slack/Discord webhook 추가 가능
